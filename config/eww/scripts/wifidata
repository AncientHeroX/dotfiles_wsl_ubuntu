#! /usr/bin/bash
function get_networks() {
  nmcli dev wifi rescan
  active="\uf427"
  echo $(nmcli -t -f ACTIVE,SSID,BARS,SIGNAL dev wifi | sort -t ':' -k1,1r -k4,4nr | awk -F: '
  NF && $2 != "" && $4 >= 40 {
    active=$1
    ssid=$2
    bars=$3

    printf("{\"isactive\": \"%s\", \"id\": \"%s\", \"bar\": \"%s\"}", active, ssid, bars)
  }'| jq -s .)
}

function connection_data() {
  networkname=$(nmcli -t -f active,ssid dev wifi | grep "^yes" | cut -d: -f2)
  networkip=$(nmcli -t -f ip4.address dev show | head -n1 | cut -d: -f2)
  networktype=$(nmcli -t -f TYPE,DEVICE connection show --active| head -n1 | cut -d: -f2)

  icon="󱘖"
  if [ -n "$networkname" ]; then
    if [ "$networktype" = "wlo1" ]; then
      icon="󰤨"
    else
      icon=""
    fi
  else 
    networkname="disconnected"
  fi
  echo "{
    \"name\": \"${networkname}\",
    \"icon\": \"${icon}\",
    \"ip\": \"${networkip}\"
  }"
}

if [[ $1 == 'current' ]]; then 
  echo "{
    \"current_connection\": $(connection_data)
  }"
elif [[ $1 == 'networks' ]]; then
  echo "$(get_networks)"
elif [[ $1 == 'toggle' ]]; then
  netname=$2
  status=$(nmcli -t -f SSID,ACTIVE dev wifi | grep "${netname}" | head -n1 | awk -F: '$1 != "" {printf("{ \"name\": \"%s\", \"isactive\":\"%s\" }", $1, $2)}')

  got_name=$(echo ${status} | jq -r ".name")
  active=$(echo ${status}  | jq -r ".isactive")
  echo $got_name

  if [[ "${got_name}" == "$2" ]]; then
    if [[ "${active}" == "yes" ]]; then
      nmcli connection down "${got_name}"
    else
      nmcli device wifi connect "${got_name}"
    fi
  fi
  /home/eduardglez/.config/eww/scripts/toggle-wifi
fi
